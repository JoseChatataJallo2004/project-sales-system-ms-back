CREATE DATABASE IF NOT EXISTS ms_santiago;
USE ms_santiago;

DROP TABLE IF EXISTS cliente;
CREATE TABLE cliente (
  id BIGINT NOT NULL AUTO_INCREMENT,
  nombre VARCHAR(255),
  apellido VARCHAR(255),
  correo VARCHAR(255),
  telefono VARCHAR(255),
  dni VARCHAR(255),
  PRIMARY KEY (id)
);
INSERT INTO cliente VALUES (2,'Juan','Perez','juan@mail.com','999888777','12345678');

DROP TABLE IF EXISTS detalles_venta;
CREATE TABLE detalles_venta (
  id BIGINT NOT NULL AUTO_INCREMENT,
  cantidad INT,
  precio_unitario DECIMAL(38,2),
  producto_id BIGINT NOT NULL,
  subtotal DECIMAL(38,2),
  venta_id BIGINT NOT NULL,
  PRIMARY KEY (id),
  KEY (venta_id),
  CONSTRAINT FOREIGN KEY (venta_id) REFERENCES ventas(id)
);
INSERT INTO detalles_venta VALUES (1,2,45.50,101,91.00,1),(2,1,110.00,202,110.00,1);

DROP TABLE IF EXISTS menu;
CREATE TABLE menu (
  id_menu INT NOT NULL AUTO_INCREMENT,
  icono VARCHAR(255),
  nombre VARCHAR(255),
  url VARCHAR(255),
  PRIMARY KEY (id_menu)
);
INSERT INTO menu VALUES 
(1,NULL,'Inicio','/inicio/home'),
(2,'pi pi-users','Clientes','/inicio/clientes'),
(3,'pi pi-box','Productos','/inicio/productos'),
(4,NULL,'Ventas','/inicio/ventas'),
(5,NULL,'Ver Venta','/inicio/ver-ventas');

DROP TABLE IF EXISTS menu_rol;
CREATE TABLE menu_rol (
  id_menu_rol INT NOT NULL AUTO_INCREMENT,
  id_menu INT,
  id_rol INT,
  PRIMARY KEY (id_menu_rol),
  KEY (id_menu),
  KEY (id_rol),
  CONSTRAINT FOREIGN KEY (id_menu) REFERENCES menu(id_menu),
  CONSTRAINT FOREIGN KEY (id_rol) REFERENCES rol(id_rol)
);
INSERT INTO menu_rol VALUES (1,1,1),(2,2,1),(3,3,1),(4,4,1),(5,5,1);

DROP TABLE IF EXISTS producto;
CREATE TABLE producto (
  id BIGINT NOT NULL AUTO_INCREMENT,
  nombre VARCHAR(255),
  precio DOUBLE,
  stock INT,
  PRIMARY KEY (id)
);
INSERT INTO producto VALUES (2,'Laptop Lenovo',2500.5,10);

DROP TABLE IF EXISTS rol;
CREATE TABLE rol (
  id_rol INT NOT NULL AUTO_INCREMENT,
  fecha_registro DATETIME(6),
  nombre VARCHAR(255),
  PRIMARY KEY (id_rol)
);
INSERT INTO rol VALUES (1,NULL,'ADMIN'),(2,NULL,'JEFE');

DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id BIGINT NOT NULL AUTO_INCREMENT,
  password VARCHAR(255) NOT NULL,
  roles VARCHAR(255),
  username VARCHAR(255) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE (username)
);
INSERT INTO users VALUES 
(1,'$2a$10$/zAhi3/TV9xox8ApxekMy.yx7BvoUjaoVkRZ08F.RtoVvm1oKqxTu','ADMIN','admin'),
(2,'$2a$12$crxM6eHX.0P7B4276FBcReP2qF7JTAxTbnhnyq.tYgk9jsU6sVYgO','JEFE','jose');

DROP TABLE IF EXISTS ventas;
CREATE TABLE ventas (
  id BIGINT NOT NULL AUTO_INCREMENT,
  codigo VARCHAR(6) NOT NULL,
  fecha DATETIME(6) NOT NULL,
  monto_total DECIMAL(38,2),
  PRIMARY KEY (id),
  UNIQUE (codigo)
);
INSERT INTO ventas VALUES (1,'P00001','2025-06-28 18:50:35.544835',201.00);

DROP PROCEDURE IF EXISTS sp_getMenusByRol;
DELIMITER //
CREATE PROCEDURE sp_getMenusByRol(IN rolNombre VARCHAR(50))
BEGIN
    SELECT 
        m.id_Menu AS id_Menu,
        m.nombre,
        m.url,
        m.icono
    FROM 
        Menu AS m
    INNER JOIN 
        Menu_Rol AS rm ON m.id_Menu = rm.id_Menu
    INNER JOIN 
        Rol AS r ON rm.id_Rol = r.id_Rol
    INNER JOIN 
        users AS u ON r.nombre = u.roles
    WHERE 
        u.roles = rolNombre;
END;
//
DELIMITER ;
